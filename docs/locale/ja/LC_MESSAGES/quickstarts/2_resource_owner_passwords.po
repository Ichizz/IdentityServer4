# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016, Brock Allen & Dominick Baier
# This file is distributed under the same license as the IdentityServer4
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
msgid ""
msgstr ""
"Project-Id-Version: IdentityServer4 1.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-04 15:21+0900\n"
"PO-Revision-Date: 2018-11-17 07:34+0900\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ja_JP\n"
"X-Generator: Poedit 2.2\n"

#: ../../quickstarts/2_resource_owner_passwords.rst:4
msgid "Protecting an API using Passwords"
msgstr "パスワードを使用したAPIの保護"

#: ../../quickstarts/2_resource_owner_passwords.rst:6
msgid ""
"The OAuth 2.0 resource owner password grant allows a client to send "
"username and password to the token service and get an access token back "
"that represents that user."
msgstr ""
"OAuth 2.0のリソースオーナーパスワードの付与により、クライアントはユーザー"
"名とパスワードをトークンサービスに送信し、そのユーザーを表すアクセストー"
"クンを取得できます。"

#: ../../quickstarts/2_resource_owner_passwords.rst:9
msgid ""
"The spec recommends using the resource owner password grant only for "
"\"trusted\" (or legacy) applications. Generally speaking you are "
"typically far better off using one of the interactive OpenID Connect "
"flows when you want to authenticate a user and request access tokens."
msgstr ""
"この仕様では、「信頼できる」（または従来の）アプリケーションに対しての"
"み、リソース所有者のパスワード付与を使用することを推奨しています。一般"
"に、ユーザーを認証してアクセストークンを要求する場合、対話型のOpenID "
"Connectフローの1つを使用する方が、通常ははるかに優れています。"

#: ../../quickstarts/2_resource_owner_passwords.rst:13
msgid ""
"Nevertheless, this grant type allows us to introduce the concept of "
"users to our quickstart IdentityServer, and that's why we show it."
msgstr ""
"それにもかかわらず、このグラント・タイプは、ユーザーの概念をクイックス"
"タートのIdentityServerに導入することを可能にします。"

#: ../../quickstarts/2_resource_owner_passwords.rst:17
msgid "Adding users"
msgstr "ユーザーの追加"

#: ../../quickstarts/2_resource_owner_passwords.rst:18
msgid ""
"Just like there are in-memory stores for resources (aka scopes) and "
"clients, there is also one for users."
msgstr ""
"リソース（別名スコープ）とクライアント用のメモリ内のストアと同様、ユー"
"ザー用のストアもあります。"

#: ../../quickstarts/2_resource_owner_passwords.rst:20
msgid ""
"Check the ASP.NET Identity based quickstarts for more information on how "
"to properly store and manage user accounts."
msgstr ""
"ユーザーアカウントを適切に保存および管理する方法の詳細については、ASP."
"NET IDベースのクイックスタートを参照してください。"

#: ../../quickstarts/2_resource_owner_passwords.rst:22
msgid ""
"The class ``TestUser`` represents a test user and its claims. Let's "
"create a couple of users by adding the following code to our config "
"class:"
msgstr ""
"このクラスTestUserは、テストユーザーとその主張を表します。configクラスに"
"次のコードを追加して、2人のユーザーを作成しましょう："

#: ../../quickstarts/2_resource_owner_passwords.rst:25
msgid "First add the following using statement to the ``Config.cs`` file::"
msgstr "まず、次のusingステートメントをConfig.csファイルに追加します。::"

#: ../../quickstarts/2_resource_owner_passwords.rst:48
msgid "Then register the test users with IdentityServer::"
msgstr "次に、テストユーザーをIdentityServerに登録します。::"

#: ../../quickstarts/2_resource_owner_passwords.rst:60
msgid ""
"The ``AddTestUsers`` extension method does a couple of things under the "
"hood"
msgstr ""
"AddTestUsers拡張メソッドは、ボンネットの下に物事のカップルを行います"

#: ../../quickstarts/2_resource_owner_passwords.rst:62
msgid "adds support for the resource owner password grant"
msgstr "リソース所有者のパスワード付与のサポートを追加"

#: ../../quickstarts/2_resource_owner_passwords.rst:63
msgid ""
"adds support to user related services typically used by a login UI "
"(we'll use that in the next quickstart)"
msgstr ""
"ログインUIによって通常使用されるユーザー関連サービスへのサポートを追加し"
"ます（次のクイックスタートで使用します）"

#: ../../quickstarts/2_resource_owner_passwords.rst:64
msgid ""
"adds support for a profile service based on the test users (you'll learn "
"more about that in the next quickstart)"
msgstr ""
"テストユーザーに基づくプロファイルサービスのサポートが追加されました（次"
"回のクイックスタートで詳しく説明します）"

#: ../../quickstarts/2_resource_owner_passwords.rst:67
msgid "Adding a client for the resource owner password grant"
msgstr "リソース所有者のパスワード付与のためのクライアントの追加"

#: ../../quickstarts/2_resource_owner_passwords.rst:68
msgid ""
"You could simply add support for the grant type to our existing client "
"by changing the ``AllowedGrantTypes`` property. If you need your client "
"to be able to use both grant types that is absolutely supported."
msgstr ""
"AllowedGrantTypesプロパティーを変更することによって、既存のクライアントに"
"許可タイプのサポートを追加することができ ます。あなたのクライアントが絶対"
"にサポートされている両方の権限タイプを使用できるようにする必要がある場"
"合。"

#: ../../quickstarts/2_resource_owner_passwords.rst:72
msgid ""
"Typically you want to create a separate client for the resource owner "
"use case, add the following to your clients configuration::"
msgstr ""
"通常、リソース所有者のユースケース用に個別のクライアントを作成し、クライ"
"アント構成に次のものを追加します。::"

#: ../../quickstarts/2_resource_owner_passwords.rst:97
msgid "Requesting a token using the password grant"
msgstr "パスワードの付与を使ってトークンを要求する"

#: ../../quickstarts/2_resource_owner_passwords.rst:98
msgid ""
"The client looks very similar to what we did for the client credentials "
"grant. The main difference is now that the client would collect the "
"user's password somehow, and send it to the token service during the "
"token request."
msgstr ""
"クライアントは、クライアントの資格認可のために行ったのと非常によく似てい"
"ます。主な違いは、クライアントが何とかユーザーのパスワードを収集し、トー"
"クン要求中にトークンサービスに送信することです。"

#: ../../quickstarts/2_resource_owner_passwords.rst:102
msgid "Again IdentityModel's ``TokenClient`` can help out here::"
msgstr "再びIdentityModel TokenClientがここで助けてくれるでしょう："

#: ../../quickstarts/2_resource_owner_passwords.rst:117
msgid ""
"When you send the token to the identity API endpoint, you will notice "
"one small but important difference compared to the client credentials "
"grant. The access token will now contain a ``sub`` claim which uniquely "
"identifies the user. This \"sub\" claim can be seen by examining the "
"content variable after the call to the API and also will be displayed on "
"the screen by the console application."
msgstr ""
"トークンをID APIエンドポイントに送信すると、クライアントの資格認可と比較"
"して小さいが重要な違いがあることに気づくでしょう。アクセストークンには"
"sub、ユーザーを一意に識別するクレームが含まれます。この「サブ」クレーム"
"は、APIへの呼び出し後にコンテンツ変数を調べることによって見ることができ、"
"コンソールアプリケーションによって画面にも表示されます。"

#: ../../quickstarts/2_resource_owner_passwords.rst:121
msgid ""
"The presence (or absence) of the ``sub`` claim lets the API distinguish "
"between calls on behalf of clients and calls on behalf of users."
msgstr ""
"``sub`` クレームの有無（または不在）により、APIはクライアントの代わりに"
"コールを、ユーザーの代わりにコールを区別できます。"
