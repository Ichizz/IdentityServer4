# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016, Brock Allen & Dominick Baier
# This file is distributed under the same license as the IdentityServer4
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
msgid ""
msgstr ""
"Project-Id-Version: IdentityServer4 1.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-04 15:21+0900\n"
"PO-Revision-Date: 2018-11-17 20:08+0900\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ja_JP\n"
"X-Generator: Poedit 2.2\n"

#: ../../topics/secrets.rst:2
msgid "Secrets"
msgstr ""

#: ../../topics/secrets.rst:4
msgid ""
"In certain situations, clients need to authenticate with identityserver, "
"e.g."
msgstr ""
"特定の状況では、クライアントはidentityserverで認証する必要があります。"

#: ../../topics/secrets.rst:6
msgid ""
"confidential applications (aka clients) requesting tokens at the token "
"endpoint"
msgstr ""
"トークンエンドポイントでトークンを要求する機密アプリケーション（別称クラ"
"イアント）"

#: ../../topics/secrets.rst:7
msgid "APIs validating reference tokens at the introspection endpoint"
msgstr "イントロスペクションエンドポイントで参照トークンを検証するAPI"

#: ../../topics/secrets.rst:9
msgid ""
"For that purpose you can assign a list of secrets to a client or an API "
"resource."
msgstr ""
"その目的のために、秘密のリストをクライアントまたはAPIリソースに割り当てる"
"ことができます。"

#: ../../topics/secrets.rst:11
msgid ""
"Secret parsing and validation is an extensibility point in "
"identityserver, out of the box it supports shared secrets as well as "
"transmitting the shared secret via a basic authentication header or the "
"POST body."
msgstr ""
"秘密の解析と検証は、アイデンティティサーバーの拡張ポイントです。これは、"
"共有秘密をサポートするだけでなく、基本認証ヘッダーまたはPOST本体を介して"
"共有秘密情報を送信することも可能です。"

#: ../../topics/secrets.rst:15
msgid "Creating a shared secret"
msgstr "共有秘密の作成"

#: ../../topics/secrets.rst:16
msgid "The following code sets up a hashed shared secret::"
msgstr "次のコードは、ハッシュ共有秘密を設定します。"

#: ../../topics/secrets.rst:20
msgid ""
"This secret can now be assigned to either a ``Client`` or an "
"``ApiResource``. Notice that both do not only support a single secret, "
"but multiple. This is useful for secret rollover and rotation::"
msgstr ""
"このシークレットをa Clientまたはaのいずれかに割り当てることができるように"
"なりましたApiResource。両方が単一のシークレットをサポートするだけでなく、"
"複数のシークレットをサポートすることに注意してください。これは、秘密の"
"ロールオーバーとローテーションに便利です。"

#: ../../topics/secrets.rst:35
msgid ""
"In fact you can also assign a description and an expiration date to a "
"secret. The description will be used for logging, and the expiration "
"date for enforcing a secret lifetime::"
msgstr ""
"実際には、秘密情報に説明と有効期限を割り当てることもできます。説明はロギ"
"ング、および秘密のライフタイムを実施するための有効期限に使用されます。"

#: ../../topics/secrets.rst:44
msgid "Authentication using a shared secret"
msgstr "共有秘密を使った認証"

#: ../../topics/secrets.rst:45
msgid ""
"You can either send the client id/secret combination as part of the POST "
"body::"
msgstr ""
"POSTボディの一部としてクライアントID /シークレットの組み合わせを送信する"
"こともできます。"

#: ../../topics/secrets.rst:53
msgid "..or as a basic authentication header::"
msgstr "..または基本認証ヘッダーとして："

#: ../../topics/secrets.rst:61
msgid ""
"You can manually create a basic authentication header using the "
"following C# code::"
msgstr "次のC＃コードを使用して基本認証ヘッダーを手動で作成できます。"

#: ../../topics/secrets.rst:69
msgid ""
"The `IdentityModel <https://github.com/IdentityModel/IdentityModel2>`_ "
"library has helper classes called ``TokenClient`` and "
"``IntrospectionClient`` that encapsulate both authentication and "
"protocol messages."
msgstr ""
"IdentityModelのライブラリが呼び出されるヘルパークラスを持っている"
"TokenClientし、IntrospectionClientそれは両方の認証プロトコルメッセージを"
"カプセル化します。"

#: ../../topics/secrets.rst:73
msgid "Beyond shared secrets"
msgstr "共有秘密を越えて"

#: ../../topics/secrets.rst:74
msgid ""
"There are other techniques to authenticate clients, e.g. based on public/"
"private key cryptography. IdentityServer includes support for private "
"key JWT client secrets (see `RFC 7523 <https://tools.ietf.org/html/"
"rfc7523>`_)."
msgstr ""
"クライアントを認証するには、公開/秘密鍵暗号化などの方法があります。"
"IdentityServerには、秘密鍵JWTクライアントの秘密（RFC 7523を参照）のサポー"
"トが含まれています。"

#: ../../topics/secrets.rst:77
msgid "Secret extensibility typically consists of three things:"
msgstr "秘密の拡張性は、通常、次の3つから構成されます。"

#: ../../topics/secrets.rst:79
msgid "a secret definition"
msgstr "秘密の定義"

#: ../../topics/secrets.rst:80
msgid ""
"a secret parser that knows how to extract the secret from the incoming "
"request"
msgstr "入ってくるリクエストから秘密を引き出す方法を知っている秘密のパーサ"

#: ../../topics/secrets.rst:81
msgid ""
"a secret validator that knows how to validate the parsed secret based on "
"the definition"
msgstr ""
"定義に基づいて解析された秘密を検証する方法を知っている秘密のバリデータ"

#: ../../topics/secrets.rst:83
msgid ""
"Secret parsers and validators are implementations of the "
"``ISecretParser`` and ``ISecretValidator`` interfaces. To make them "
"available to IdentityServer, you need to register them with the DI "
"container, e.g.::"
msgstr ""
"シークレットパーサーとバリデーターは、ISecretParserとISecretValidatorイン"
"ターフェースの実装です。それらをIdentityServerで使用できるようにするに"
"は、それらをDIコンテナに登録する必要があります。"

#: ../../topics/secrets.rst:89
msgid ""
"Our default private key JWT secret validator expects the full (leaf) "
"certificate as base64 on the secret definition. This certificate will "
"then be used to validate the signature on the self-signed JWT, e.g.::"
msgstr ""
"私たちのデフォルトの秘密鍵JWT秘密のバリデータは、完全な（リーフ）証明書が"
"秘密の定義のbase64として期待しています。この証明書は、自己署名されたJWTの"
"署名を検証するために使用されます。"

#: ../../topics/secrets.rst:108
msgid ""
"You could implement your own secret validator (or extend ours) to "
"implement e.g. chain trust validation instead."
msgstr ""
"独自の秘密のバリデーターを実装したり、独自のシークレット・バリデーターを"
"実装して、チェーン信頼の検証などを実装することもできます。"
