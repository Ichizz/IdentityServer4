# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016, Brock Allen & Dominick Baier
# This file is distributed under the same license as the IdentityServer4
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IdentityServer4 1.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-04 15:21+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../topics/crypto.rst:4
msgid "Cryptography, Keys and HTTPS"
msgstr ""

#: ../../topics/crypto.rst:6
msgid "IdentityServer relies on a couple of crypto mechanisms to do its job."
msgstr ""

#: ../../topics/crypto.rst:9
msgid "Token signing and validation"
msgstr ""

#: ../../topics/crypto.rst:10
msgid ""
"IdentityServer needs an asymmetric key pair to sign and validate JWTs. "
"This keypair can be a certificate/private key combination or raw RSA "
"keys. In any case it must support RSA with SHA256."
msgstr ""

#: ../../topics/crypto.rst:14
msgid ""
"Loading of signing key and the corresponding validation part is done by "
"implementations of ``ISigningCredentialStore`` and "
"``IValidationKeysStore``. If you want to customize the loading of the "
"keys, you can implement those interfaces and register them with DI."
msgstr ""

#: ../../topics/crypto.rst:17
msgid ""
"The DI builder extensions has a couple of convenience methods to set "
"signing and validation keys - see :ref:`here <refStartupKeyMaterial>`."
msgstr ""

#: ../../topics/crypto.rst:20
msgid "Signing key rollover"
msgstr ""

#: ../../topics/crypto.rst:21
msgid ""
"While you can only use one signing key at a time, you can publish more "
"than one validation key to the discovery document. This is useful for key"
" rollover."
msgstr ""

#: ../../topics/crypto.rst:24
msgid "A rollover typically works like this:"
msgstr ""

#: ../../topics/crypto.rst:26
msgid "you request/create new key material"
msgstr ""

#: ../../topics/crypto.rst:27
msgid ""
"you publish the new validation key in addition to the current one. You "
"can use the ``AddValidationKeys`` builder extension method for that."
msgstr ""

#: ../../topics/crypto.rst:28
msgid ""
"all clients and APIs now have a chance to learn about the new key the "
"next time they update their local copy of the discovery document"
msgstr ""

#: ../../topics/crypto.rst:29
msgid ""
"after a certain amount of time (e.g. 24h) all clients and APIs should now"
" accept both the old and the new key material"
msgstr ""

#: ../../topics/crypto.rst:30
msgid ""
"keep the old key material around for as long as you like, maybe you have "
"long-lived tokens that need validation"
msgstr ""

#: ../../topics/crypto.rst:31
msgid "retire the old key material when it is not used anymore"
msgstr ""

#: ../../topics/crypto.rst:32
msgid ""
"all clients and APIs will \"forget\" the old key next time they update "
"their local copy of the discovery document"
msgstr ""

#: ../../topics/crypto.rst:34
msgid ""
"This requires that clients and APIs use the discovery document, and also "
"have a feature to periodically refresh their configuration."
msgstr ""

#: ../../topics/crypto.rst:37
msgid "Data protection"
msgstr ""

#: ../../topics/crypto.rst:38
msgid ""
"Cookie authentication in ASP.NET Core (or anti-forgery in MVC) use the "
"ASP.NET Core data protection feature. Depending on your deployment "
"scenario, this might require additional configuration. See the Microsoft "
"`docs <https://docs.microsoft.com/en-us/aspnet/core/security/data-"
"protection/configuration/overview>`_ for more information."
msgstr ""

#: ../../topics/crypto.rst:42
msgid "HTTPS"
msgstr ""

#: ../../topics/crypto.rst:43
msgid ""
"We don't enforce the use of HTTPS, but for production it is mandatory for"
" every interaction with IdentityServer."
msgstr ""

