# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016, Brock Allen & Dominick Baier
# This file is distributed under the same license as the IdentityServer4
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
msgid ""
msgstr ""
"Project-Id-Version: IdentityServer4 1.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-04 15:21+0900\n"
"PO-Revision-Date: 2018-11-17 19:37+0900\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ja_JP\n"
"X-Generator: Poedit 2.2\n"

#: ../../topics/resource_owner.rst:4
msgid "Resource Owner Password Validation"
msgstr "リソースオーナーのパスワード検証"

#: ../../topics/resource_owner.rst:6
msgid ""
"If you want to use the OAuth 2.0 resource owner password credential "
"grant (aka ``password``), you need to implement and register the "
"``IResourceOwnerPasswordValidator`` interface::"
msgstr ""
"OAuth 2.0リソースオーナーのパスワード認証情報（別名password）を使用する場"
"合は、IResourceOwnerPasswordValidatorインターフェースを実装して登録する必"
"要があります。"

#: ../../topics/resource_owner.rst:17
msgid ""
"On the context you will find already parsed protocol parameters like "
"``UserName`` and ``Password``, but also the raw request if you want to "
"look at other input data."
msgstr ""
"コンテキストの中で、あなたは他の入力データを見たいと思っているならば、"
"UserNameとのような、すでに解析されたプロトコルのパラメタが見つかるでしょ"
"うPassword。"

#: ../../topics/resource_owner.rst:19
msgid ""
"Your job is then to implement the password validation and set the "
"``Result`` on the context accordingly. See the :ref:"
"`GrantValidationResult <refGrantValidationResult>` documentation."
msgstr ""
"あなたの仕事はパスワード検証を実装し、それにResult応じてコンテキストを設"
"定します。GrantValidationResultのドキュメントを参照してください。"
