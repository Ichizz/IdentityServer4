# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016, Brock Allen & Dominick Baier
# This file is distributed under the same license as the IdentityServer4
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
msgid ""
msgstr ""
"Project-Id-Version: IdentityServer4 1.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-04 15:21+0900\n"
"PO-Revision-Date: 2018-11-17 20:24+0900\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ja_JP\n"
"X-Generator: Poedit 2.2\n"

#: ../../topics/consent.rst:4
msgid "Consent"
msgstr ""

#: ../../topics/consent.rst:6
msgid ""
"During an authorization request, if IdentityServer requires user consent "
"the browser will be redirected to the consent page."
msgstr ""
"承認リクエスト中に、IdentityServerにユーザの同意が必要な場合、ブラウザは"
"同意ページにリダイレクトされます。"

#: ../../topics/consent.rst:8
msgid ""
"Consent is used to allow an end user to grant a client access to "
"resources (:ref:`identity <refIdentityResource>` or :ref:`API "
"<refApiResource>`). This is typically only necessary for third-party "
"clients, and can be enabled/disabled per-client on the :ref:`client "
"settings <refClient>`."
msgstr ""
"同意は、エンドユーザーがクライアントにリソース（IDまたはAPI）へのアクセス"
"を許可するために使用されます。これは通常、サードパーティのクライアントに"
"のみ必要で、クライアント設定でクライアントごとに有効/無効にすることができ"
"ます。"

#: ../../topics/consent.rst:12
msgid "Consent Page"
msgstr ""

#: ../../topics/consent.rst:13
msgid ""
"In order for the user to grant consent, a consent page must be provided "
"by the hosting application. The `quickstart UI <https://github.com/"
"IdentityServer/IdentityServer4.Quickstart.UI>`_ has a basic "
"implementation of a consent page."
msgstr ""
"ユーザーが同意を与えるためには、ホスティングアプリケーションによって同意"
"ページを提供する必要があります。クイックスタートUIは、同意ページの基本的"
"な実装を持っています。"

#: ../../topics/consent.rst:16
msgid ""
"A consent page normally renders the display name of the current user, "
"the display name of the client requesting access, the logo of the "
"client, a link for more information about the client, and the list of "
"resources the client is requesting access to. It's also common to allow "
"the user to indicate that their consent should be \"remembered\" so they "
"are not prompted again in the future for the same client."
msgstr ""
"同意ページは通常、現在のユーザーの表示名、アクセスを要求するクライアント"
"の表示名、クライアントのロゴ、クライアントに関する詳細情報のリンク、およ"
"びクライアントがアクセスを要求しているリソースのリストを表示します。ま"
"た、同じクライアントのために今後再度尋ねられないように、同意を \"記憶\"す"
"る必要があることをユーザーに示すこともできます。"

#: ../../topics/consent.rst:23
msgid ""
"Once the user has provided consent, the consent page must inform "
"IdentityServer of the consent, and then the browser must be redirected "
"back to the authorization endpoint."
msgstr ""
"ユーザーが同意した後、同意ページは同意をIdentityServerに通知しなければな"
"らず、その後、ブラウザーは許可エンドポイントにリダイレクトされなければな"
"りません。"

#: ../../topics/consent.rst:26
msgid "Authorization Context"
msgstr ""

#: ../../topics/consent.rst:28
msgid ""
"IdentityServer will pass a `returnUrl` parameter (configurable on the :"
"ref:`user interaction options <refOptions>`) to the consent page which "
"contains the parameters of the authorization request. These parameters "
"provide the context for the consent page, and can be read with help from "
"the :ref:`interaction service <refInteractionService>`. The "
"``GetAuthorizationContextAsync`` API will return an instance of "
"``AuthorizationRequest``."
msgstr ""
"IdentityServerは、承認要求のパラメータを含む同意ページにreturnUrlパラメー"
"タ（ユーザ対話オプションで設定可能）を渡します。これらのパラメータは、同"
"意ページのコンテキストを提供し、インタラクションサービスのヘルプを使用し"
"て読むことができます。GetAuthorizationContextAsyncAPIは、のインスタンスを"
"返しますAuthorizationRequest。"

#: ../../topics/consent.rst:32
msgid ""
"Additional details about the client or resources can be obtained using "
"the ``IClientStore`` and ``IResourceStore`` interfaces."
msgstr ""
"クライアントおよびリソースに関する追加の詳細は、IClientStoreおよび"
"IResourceStoreinterfaces を使用して取得できます。"

#: ../../topics/consent.rst:35
msgid "Informing IdentityServer of the consent result"
msgstr ""

#: ../../topics/consent.rst:37
msgid ""
"The ``GrantConsentAsync`` API on the :ref:`interaction service "
"<refInteractionService>` allows the consent page to inform "
"IdentityServer of the outcome of consent (which might also be to deny "
"the client access)."
msgstr ""
"インタラクションサービスのGrantConsentAsyncAPI は、同意ページが"
"IdentityServerに同意の結果を通知することを許可します（これは、クライアン"
"トアクセスを拒否することもできます）。"

#: ../../topics/consent.rst:39
msgid ""
"IdentityServer will temporarily persist the outcome of the consent. This "
"persistence uses a cookie by default, as it only needs to last long "
"enough to convey the outcome back to the authorization endpoint. This "
"temporary persistence is different than the persistence used for the "
"\"remember my consent\" feature (and it is the authorization endpoint "
"which persists the \"remember my consent\" for the user). If you wish to "
"use some other persistence between the consent page and the "
"authorization redirect, then you can implement "
"``IMessageStore<ConsentResponse>`` and register the implementation in DI."
msgstr ""
"IdentityServerは同意の結果を一時的に保持します。この永続性は、デフォルト"
"でクッキーを使用します。これは、結果を認可エンドポイントに戻すのに十分な"
"だけ持続する必要があるためです。この一時的な永続性は、「私の同意を覚えて"
"ください」機能で使用されていた永続性とは異なります（ユーザーに「同意して"
"ください」のままです）。同意ページと認可リダイレクトの間に他の永続性を使"
"用する場合はIMessageStore<ConsentResponse>、実装をDIに実装して登録するこ"
"とができます。"

#: ../../topics/consent.rst:45
msgid "Returning the user to the authorization endpoint"
msgstr ""

#: ../../topics/consent.rst:46
msgid ""
"Once the consent page has informed IdentityServer of the outcome, the "
"user can be redirected back to the `returnUrl`. Your consent page should "
"protect against open redirects by verifying that the `returnUrl` is "
"valid. This can be done by calling ``IsValidReturnUrl`` on the :ref:"
"`interaction service <refInteractionService>`. Also, if "
"``GetAuthorizationContextAsync`` returns a non-null result, then you can "
"also trust that the `returnUrl` is valid."
msgstr ""
"同意ページがIdentityServerに結果を通知すると、ユーザーはreturnUrlにリダイ"
"レクトできます。あなたの同意ページは、returnUrlが有効であることを確認する"
"ことによって、開いているリダイレクトに対して保護する必要があります。これ"
"はIsValidReturnUrl、対話サービスを呼び出すことによって行うことができま"
"す。また、GetAuthorizationContextAsyncnull以外の結果を戻す場合は、"
"returnUrlが有効であると信頼することもできます。"
