# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016, Brock Allen & Dominick Baier
# This file is distributed under the same license as the IdentityServer4
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
msgid ""
msgstr ""
"Project-Id-Version: IdentityServer4 1.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-04 15:21+0900\n"
"PO-Revision-Date: 2018-11-17 20:34+0900\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ja_JP\n"
"X-Generator: Poedit 2.2\n"

#: ../../topics/signout.rst:4
msgid "Sign-out"
msgstr "サインアウト"

#: ../../topics/signout.rst:6
msgid ""
"Signing out of IdentityServer is as simple as removing the "
"authentication cookie, but for doing a complete federated sign-out, we "
"must consider signing the user out of the client applications (and maybe "
"even up-stream identity providers) as well."
msgstr ""
"IdentityServerのサインアウトは、認証Cookieを削除するだけの簡単な方法です"
"が、完全なフェデレーションによるサインアウトを行うには、クライアントアプ"
"リケーション（さらにアップストリームのアイデンティティプロバイダ）にも"
"ユーザーを署名することを検討する必要があります。"

#: ../../topics/signout.rst:10
msgid "Removing the authentication cookie"
msgstr "認証Cookieを削除する"

#: ../../topics/signout.rst:12
msgid ""
"To remove the authentication cookie, simply use the ``SignOutAsync`` "
"extension method on the ``HttpContext``. You will need to pass the "
"scheme used (which is provided by ``IdentityServerConstants."
"DefaultCookieAuthenticationScheme`` unless you have changed it)::"
msgstr ""
"認証Cookieを削除するには、SignOutAsync拡張機能を使用しHttpContextます。使"
"用したスキームを渡す必要があります（IdentityServerConstants."
"DefaultCookieAuthenticationScheme変更しない限り提供されます）。"

#: ../../topics/signout.rst:17
msgid ""
"Or you can use the convenience extension method that is provided by "
"IdentityServer::"
msgstr ""
"または、IdentityServerによって提供される便利な拡張メソッドを使用すること"
"もできます。"

#: ../../topics/signout.rst:21
msgid ""
"Typically you should prompt the user for signout (meaning require a "
"POST), otherwise an attacker could hotlink to your logout page causing "
"the user to be automatically logged out."
msgstr ""
"通常、ログアウトページ（ユーザーが自動的にログアウトする）にアタッカーが"
"ホットリンクすることがあります。"

#: ../../topics/signout.rst:24
msgid "Notifying clients that the user has signed-out"
msgstr "ユーザーがログアウトしたことをクライアントに通知する"

#: ../../topics/signout.rst:26
msgid ""
"As part of the signout process you will want to ensure client "
"applications are informed that the user has signed out. IdentityServer "
"supports the `front-channel <https://openid.net/specs/openid-connect-"
"frontchannel-1_0.html>`_ specification for server-side clients (e.g. "
"MVC), the `back-channel <https://openid.net/specs/openid-connect-"
"backchannel-1_0.html>`_  specification for server-side clients (e.g. "
"MVC), and the `session management <https://openid.net/specs/openid-"
"connect-session-1_0.html>`_ specification for browser-based JavaScript "
"clients (e.g. SPA, React, Angular, etc.)."
msgstr ""
"サインアウトプロセスの一環として、ユーザーがログアウトしたことをクライア"
"ントアプリケーションに通知する必要があります。IdentityServerは、サーバー"
"側クライアント（MVCなど）、サーバー側クライアント（MVCなど）のバックチャ"
"ネル仕様、ブラウザベースのJavaScriptクライアント（たとえばSPA、React、"
"Angular など）のセッション管理仕様のフロントチャネル仕様をサポートしてい"
"ます、など）。"

#: ../../topics/signout.rst:31
msgid "**Front-channel server-side clients**"
msgstr "**フロントチャネルサーバー側クライアント**"

#: ../../topics/signout.rst:33
msgid ""
"To signout the user from the server-side client applications via the "
"front-channel spec, the \"logged out\" page in IdentityServer must "
"render an ``<iframe>`` to notify the clients that the user has signed "
"out. Clients that wish to be notified must have the "
"``FrontChannelLogoutUri`` configuration value set. IdentityServer tracks "
"which clients the user has signed into, and provides an API called "
"``GetLogoutContextAsync`` on the ``IIdentityServerInteractionService`` (:"
"ref:`details <refInteractionService>`). This API returns a "
"``LogoutRequest`` object with a ``SignOutIFrameUrl`` property that your "
"logged out page must render into an ``<iframe>``."
msgstr ""
"Front-channel仕様でサーバー側クライアントアプリケーションから<iframe>ユー"
"ザーをサインアウトするには、IdentityServerの「ログアウト」ページで、ユー"
"ザーがログアウトしたことをクライアントに通知する必要があります。通知を受"
"けたいクライアントは、FrontChannelLogoutUri設定値を設定する必要がありま"
"す。IdentityServerは、ユーザーがログインしたクライアントを追跡"
"GetLogoutContextAsyncし、IIdentityServerInteractionService（詳細）で呼び"
"出されたAPIを提供します。このAPIは、ログアウトしたページがプロパティにレ"
"ンダリングする必要LogoutRequestがあるSignOutIFrameUrlプロパティを持つオブ"
"ジェクトを返します<iframe>。"

#: ../../topics/signout.rst:38
msgid "**Back-channel server-side clients**"
msgstr "**バックチャネルサーバー側のクライアント**"

#: ../../topics/signout.rst:40
msgid ""
"To signout the user from the server-side client applications via the "
"back-channel spec, the ``SignOutIFrameUrl`` endpoint in IdentityServer "
"will automatically trigger server-to-server invocation passing a signed "
"sign-out request to the client. This means that even if there are no "
"front-channel clients, the \"logged out\" page in IdentityServer must "
"still render an ``<iframe>`` to the ``SignOutIFrameUrl`` as described "
"above. Clients that wish to be notified must have the "
"``BackChannelLogoutUri`` configuration value set."
msgstr ""
"バックチャネル仕様を使用してサーバー側のクライアントアプリケーションから"
"ユーザーをサインアウトするにはSignOutIFrameUrl、IdentityServer のエンドポ"
"イントが自動的にサーバー間の呼び出しをトリガーし、署名済みのサインアウト"
"要求をクライアントに渡します。つまり、フロントチャネルクライアントがなく"
"ても、IdentityServerの「ログアウト」ページで<iframe>はSignOutIFrameUrl、"
"前述のように「to 」をレンダリングする必要があります。通知を受けたいクライ"
"アントは、BackChannelLogoutUri設定値を設定する必要があります。"

#: ../../topics/signout.rst:44
msgid "**Browser-based JavaScript clients**"
msgstr "**ブラウザベースのJavaScriptクライアント**"

#: ../../topics/signout.rst:46
msgid ""
"Given how the `session management <https://openid.net/specs/openid-"
"connect-session-1_0.html>`_ specification is designed, there is nothing "
"special in IdentityServer that you need to do to notify these clients "
"that the user has signed out. The clients, though, must perform "
"monitoring on the `check_session_iframe`, and this is implemented by the "
"`oidc-client JavaScript library <https://github.com/IdentityModel/oidc-"
"client-js/>`_."
msgstr ""
"セッション管理仕様がどのように設計されているかを考えると、これらのクライ"
"アントにユーザーがログアウトしたことを通知するために必要なことは、"
"IdentityServerでは特別なことは何もありません。ただし、クライアントは"
"check_session_iframeで監視を実行する必要があり、これはoidc-client "
"JavaScriptライブラリによって実装されます。"

#: ../../topics/signout.rst:50
msgid "Sign-out initiated by a client application"
msgstr "クライアントアプリケーションによって開始サインアウト"

#: ../../topics/signout.rst:52
msgid ""
"If sign-out was initiated by a client application, then the client first "
"redirected the user to the :ref:`end session endpoint <refEndSession>`. "
"Processing at the end session endpoint might require some temporary "
"state to be maintained (e.g. the client's post logout redirect uri) "
"across the redirect to the logout page. This state might be of use to "
"the logout page, and the identifier for the state is passed via a "
"`logoutId` parameter to the logout page."
msgstr ""
"ログアウトがクライアントアプリケーションによって開始された場合、クライア"
"ントは最初にエンドセッションエンドポイントにユーザーをリダイレクトしまし"
"た。エンドセッションエンドポイントでの処理では、ログアウトページへのリダ"
"イレクトを介していくつかの一時的な状態（たとえば、クライアントのポストロ"
"グアウトリダイレクトuri）が維持される必要があります。この状態はログアウト"
"ページで使用することができ、状態の識別子はlogoutIdパラメータを介してログ"
"アウトページに渡されます。"

#: ../../topics/signout.rst:56
msgid ""
"The ``GetLogoutContextAsync`` API on the :ref:`interaction service "
"<refInteractionService>` can be used to load the state. Of interest on "
"the ``ShowSignoutPrompt`` is the ``ShowSignoutPrompt`` which indicates "
"if the request for sign-out has been authenticated, and therefore it's "
"safe to not prompt the user for sign-out."
msgstr ""
"インタラクションサービスのGetLogoutContextAsyncAPIを使用して状態をロード"
"できます。theに興味があるのは、ログアウトの要求が認証されたかどうかを示し"
"ます。したがって、ユーザーにログアウトを促さないのは安全です。"
"ShowSignoutPromptShowSignoutPrompt"

#: ../../topics/signout.rst:59
msgid ""
"By default this state is managed as a protected data structure passed "
"via the `logoutId` value. If you wish to use some other persistence "
"between the end session endpoint and the logout page, then you can "
"implement ``IMessageStore<LogoutMessage>`` and register the "
"implementation in DI."
msgstr ""
"デフォルトでは、この状態はlogoutId値を介して渡される保護されたデータ構造"
"として管理されます。エンド・セッション・エンドポイントとログアウト・ペー"
"ジの間で他の永続性を使用する場合はIMessageStore<LogoutMessage>、DIで実装"
"を実装して登録できます。"
