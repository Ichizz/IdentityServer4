# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016, Brock Allen & Dominick Baier
# This file is distributed under the same license as the IdentityServer4
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
msgid ""
msgstr ""
"Project-Id-Version: IdentityServer4 1.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-11-04 15:21+0900\n"
"PO-Revision-Date: 2018-11-17 19:13+0900\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ja_JP\n"
"X-Generator: Poedit 2.2\n"

#: ../../topics/reference_tokens.rst:2
msgid "Reference Tokens"
msgstr "参照トークン"

#: ../../topics/reference_tokens.rst:3
msgid "Access tokens can come in two flavours - self-contained or reference."
msgstr "アクセストークンには、自己完結型または参照型の2つの味があります。"

#: ../../topics/reference_tokens.rst:5
msgid ""
"A JWT token would be a self-contained access token - it's a protected data "
"structure with claims and an expiration. Once an API has learned about the "
"key material, it can validate self-contained tokens without needing to "
"communicate with the issuer. This makes JWTs hard to revoke. They will stay "
"valid until they expire."
msgstr ""
"JWTトークンは、自己完結型のアクセストークンであり、クレームと有効期限を持つ保"
"護されたデータ構造です。APIがキーマテリアルについて学習すると、発行者と通信す"
"ることなく自己完結型のトークンを検証できます。これにより、JWTは取り消しが難し"
"くなります。有効期限が切れるまで有効です。"

#: ../../topics/reference_tokens.rst:9
msgid ""
"When using reference tokens - IdentityServer will store the contents of the "
"token in a data store and will only issue a unique identifier for this token "
"back to the client. The API receiving this reference must then open a back-"
"channel communication to IdentityServer to validate the token."
msgstr ""
"参照トークンを使用する場合、IdentityServerはトークンの内容をデータストアに格"
"納し、このトークンの一意の識別子のみをクライアントに発行します。この参照を受"
"け取ったAPIはIdentityServerへのバックチャネル通信を開き、トークンを検証する必"
"要があります。"

#: ../../topics/reference_tokens.rst:14
msgid "You can switch the token type of a client using the following setting::"
msgstr ""
"次の設定を使用して、クライアントのトークンタイプを切り替えることができます。"

#: ../../topics/reference_tokens.rst:18
msgid ""
"IdentityServer provides an implementation of the OAuth 2.0 introspection "
"specification which allows APIs to dereference the tokens. You can either "
"use our dedicated `introspection middleware <https://github.com/"
"IdentityModel/IdentityModel.AspNetCore.OAuth2Introspection>`_ or use the "
"`identity server authentication middleware <https://github.com/"
"IdentityServer/IdentityServer4.AccessTokenValidation>`_ which can validate "
"both JWTs and reference tokens."
msgstr ""
"IdentityServerはOAuth 2.0のイントロスペクション仕様の実装を提供しています。こ"
"れにより、APIはトークンを間接参照できます。あなたは私たちの専用使用することが"
"できますいずれかのイントロスペクションミドルウェアを または使用アイデンティ"
"ティサーバー認証ミドルウェアの両方JWTsと参照トークンを検証することができま"
"す。"

#: ../../topics/reference_tokens.rst:22
msgid ""
"The introspection endpoint requires authentication - since the client of an "
"introspection endpoint is an API, you configure the secret on the "
"``ApiResource``::"
msgstr ""
"イントロスペクションエンドポイントは、認証が必要です。イントロスペクションエ"
"ンドポイントのクライアントはAPIなので、次のようにシークレットを設定します"
"ApiResource。"

#: ../../topics/reference_tokens.rst:29
msgid ""
"See :ref:`here <refProtectingApis>` for more information on how to configure "
"the IdentityServer authentication middleware for APIs."
msgstr ""
"IdentityServer認証ミドルウェアをAPI用に設定する方法の詳細については、こちらを"
"参照してください。"
